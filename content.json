[{"title":"分治算法","date":"2016-09-08T13:11:46.000Z","path":"2016/09/08/分治算法/","text":"前言125aSn5a626YO96KeJ5b6X5oiR5LqM5YiG6K6y5b6X5LiN5aW977yM5omA5Lul5omT566X5YaZ5Liq5Y2a5a6i5p2l5byl6KGl44CC44CC44C Tips:base64解码 0.二分入门二分思想就是把一个大问题分解成许多个解法相同的小问题来解决，这样就可以把一个O(n)复杂度的程序优化成O(log n)的复杂度。 1.二分经典例题之循环赛日程表【题目描述】设有n=$2^k$个选手参加比赛，要求设计一个满足一下要求的比赛日程表:（1）每个选手必须与其他的n-1个选手个比赛一次；（2）每个选手每天只能赛一次 。【输入格式】只有一个正整数k【输出格式】请输出一个n行，每行有n个正整数的循环赛日程表。相邻的两个正整数用一个空格隔开。其中，第i行（0&lt;i&lt;n+1）表示第i队的参赛日程，第1个正整数为i，表示参赛队的队号，后面的(n-1)个正整数表示该队在参赛日程中，依次较量的队号。【样例输入】1【样例输出】1 22 1【数据范围】0&lt;k&lt;9（k属于正整数）【题解】假设n位选手被顺序编号为1,2,3,…,n，比赛的日程表是一个n行n-1列的表格，i行j列的表格内容是第i号选手在第j天的比赛对手。根据分而治之的原则，可从其中一半选手($2^(n-1)$位)的比赛日程，导出全体n位选手的日程，最终细分到只有两位选手的比赛日程出发。可假设只有8位选手参赛，若1至4号选手之间的比赛日程填在日程表的左上角(4行3列)，5至8号选手之间的比赛日程填在日程表的左下角(4行3列)；那么左下角的内容可由左上角的对应项加上数字4得到。至此，剩余的右上角(4行4列)是为编号小的1至4号选手与编号大的5至8号选手之间的比赛日程安排。例如，在第4天，让1至4号选手分别与5至8号选手比赛，以后各天，依次由前一天的日程安排，让5至8号选手“循环轮转”即可。最后，比赛日程表的右下角的比赛日程表可由，右上角的对应项减去数字4得到。 k=3时的图例： 选手 1天 2天 3天 4天 5天 6天 7天 1号 2 3 4 5 6 7 8 2号 1 4 3 6 7 8 7 3号 4 1 2 7 8 5 6 4号 3 2 1 8 5 6 5 左上角 右上角 5号 6 7 8 1 4 3 2 6号 5 8 7 2 1 4 3 7号 8 5 6 3 2 1 4 8号 7 6 5 4 3 2 1 左下角 右下角 【程序】 1234567891011121314151617181920212223242526272829303132333435363738394041424344#include&lt;cstdio&gt;#include&lt;cmath&gt;using namespace std;int k;int a[100][100];int n,temp;void gametable(int x)&#123; n=2;//k=0两个参赛选手日程可以直接求得 a[1][1]=1;a[1][2]=2; a[2][1]=2;a[2][2]=1; for(int t=1;t&lt;x;t++)//迭代处理，依次处理2^n....2^k个选手的比赛日程 &#123; temp=n;n=n*2;//填左下角元素 for(int i=temp+1;i&lt;=n;i++) for(int j=1;j&lt;=temp;j++) a[i][j]=a[i-temp][j]+temp;//左下角和左上角元素的对应关系 for(int i=1;i&lt;=temp;i++)//将左下角元素抄到右上角 for(int j=temp+1;j&lt;=n;j++) a[i][j]=a[i+temp][(j+temp)%n]; for(int i=temp+1;i&lt;=n;i++)//将左上角元素抄到右下角 for(int j=temp+1;j&lt;=n;j++) a[i][j]=a[i-temp][j-temp]; &#125; //第i行第j列表示和第i个选手在第j天比赛的选手序号 for(int i=1;i&lt;=n;i++) &#123; for(int j=1;j&lt;=n;j++) printf(\"%d \",a[i][j]); printf(\"\\n\"); &#125; &#125;int main()&#123; scanf(\"%d\",&amp;k); if(k!=0) gametable(k); return 0;&#125;//该程序取自网络，并非本人亲自所写 2.二分联赛例题之跳石头【题目链接】洛谷【P2678】跳石头【题目背景】一年一度的“跳石头”比赛又要开始了!【题目描述】这项比赛将在一条笔直的河道中进行,河道中分布着一些巨大岩石。组委会已经选择好了两块岩石作为比赛起点和终点。在起点和终点之间,有 N 块岩石(不含起点和终 点的岩石)。在比赛过程中,选手们将从起点出发,每一步跳向相邻的岩石,直至到达 终点。 为了提高比赛难度,组委会计划移走一些岩石,使得选手们在比赛过程中的最短跳 跃距离尽可能长。由于预算限制,组委会至多从起点和终点之间移走 M 块岩石(不能 移走起点和终点的岩石)。【输入格式】输入文件名为 stone.in。 输入文件第一行包含三个整数 L,N,M,分别表示起点到终点的距离,起点和终 点之间的岩石数,以及组委会至多移走的岩石数。 接下来 N 行,每行一个整数,第 i 行的整数 Di(0 &lt; Di &lt; L)表示第 i 块岩石与 起点的距离。这些岩石按与起点距离从小到大的顺序给出,且不会有两个岩石出现在同 一个位置。【输出格式】输出文件名为 stone.out。 输出文件只包含一个整数,即最短跳跃距离的最大值。【输入样例】25 5 2211141721【输出样例】4【说明】输入输出样例 1 说明：将与起点距离为 2 和 14 的两个岩石移走后,最短的跳跃距离为 4(从与起点距离 17 的岩石跳到距离 21 的岩石,或者从距离 21 的岩石跳到终点)。 另：对于 20%的数据,0 ≤ M ≤ N ≤ 10。 对于50%的数据,0 ≤ M ≤ N ≤ 100。 对于 100%的数据,0 ≤ M ≤ N ≤ 50,000,1 ≤ L ≤ 1,000,000,000。 【题解】这个先放一放。。。【程序】 123456789101112131415161718192021222324252627282930313233343536373839#include&lt;iostream&gt;#include&lt;cstdio&gt;#include&lt;algorithm&gt;#define N 50500using namespace std;int L,m,n,l,r,mid,ans,st;int a[N];int main()&#123; freopen(\"stone.in\",\"r\",stdin); freopen(\"stone.out\",\"w\",stdout); scanf(\"%d%d%d\",&amp;L,&amp;n,&amp;m); for(int i=1;i&lt;=n;++i) scanf(\"%d\",&amp;a[i]); a[++n]=L; l=0;r=L; while(l&lt;=r) //这里用的是非递归的二分 &#123; mid=(l+r)/2; //////check ans=0;st=0; for(int i=1;i&lt;=n;++i) &#123; if(a[i]-st&lt;mid) ans++; else st=a[i]; &#125; if(ans&gt;m) r=mid-1; else l=mid+1; &#125; printf(\"%d\",l-1); return 0;&#125; 3.施工中。。。","tags":[{"name":"二分","slug":"二分","permalink":"http://yoursite.com/tags/二分/"}]},{"title":"节操","date":"2016-09-08T11:09:12.000Z","path":"2016/09/08/节操/","text":"我是节操节操是我的外号这个博客里什么都没有不信自己看 123456789#include&lt;iostream&gt;using namesapce std;int main()&#123; printf(\"I'm Jiecao.\"); return 0;&#125; 啦啦啦~~~","tags":[{"name":"瞎搞","slug":"瞎搞","permalink":"http://yoursite.com/tags/瞎搞/"}]}]